# apiVersion: v1
# kind: Service
# metadata:
#   name: api-svc
# spec:
#   type: NodePort
#   selector:
#     app: api-dep
#   ports:
#   # - nodePort: 30123
#   #   port: 4001
#   #   targetPort: api-port
#   - name: otp
#     nodePort: 30333
#     port: 8080
#     targetPort: otp-port
#     protocol: TCP
#   # - name: mongodb
#   #   nodePort: 30123
#   #   port: 27017
#   #   targetPort: mongo-port
#   # - name: redis
#   #   nodePort: 30133
#   #   port: 6379
#   #   targetPort: redis-port
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api-dep
# spec:
#   selector:
#     matchLabels:
#       app: api-dep
#   template:
#     metadata:
#       labels:
#         app: api-dep
#     spec:
#       containers:
#       - name: api-dep
#         image: commuter-api-image
#         imagePullPolicy: IfNotPresent
#         resources:
#           limits:
#             memory: "128Mi"
#             cpu: "500m"
#         ports:
#         - name: api-port
#           containerPort: 4001
# ---
apiVersion: v1
kind: Service
metadata:
  name: otp
spec:
  type: NodePort   # TODO: Convert this to ClusterIP once testing is done
  selector:
    app: otp-dep
  ports:
  - port: 8080
    targetPort: otp-port
    nodePort: 30123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otp-dep
spec:
  selector:
    matchLabels:
      app: otp-dep
  template:
    metadata:
      labels:
        app: otp-dep
    spec:
      containers:
      - name: otp-dep
        image: idea456/myjejak-planner-api
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "2000Mi"
            cpu: "1000m"
        ports:
        - name: otp-port
          containerPort: 8080
  replicas: 1
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: NodePort   # TODO: Convert this to ClusterIP once testing is done
  selector:
    app: redis-dep
  ports:
  - port: 6379
    targetPort: redis-port
    nodePort: 30444
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-dep
spec:
  selector:
    matchLabels:
      app: redis-dep
  template:
    metadata:
      labels:
        app: redis-dep
    spec:
      containers:
      - name: redis-dep
        image: redis:latest
        resources:
          limits:
            memory: "500Mi"
            cpu: "500m"
        ports:
        - name: redis-port
          containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  type: NodePort   # TODO: Convert this to ClusterIP once testing is done
  selector:
    app: mongo-dep
  ports:
  - port: 27017
    targetPort: mongo-port
    nodePort: 30333
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-dep
spec:
  selector:
    matchLabels:
      app: mongo-dep
  template:
    metadata:
      labels:
        app: mongo-dep
    spec:
      containers:
      - name: mongo-dep
        image: mongo:latest
        resources:
          limits:
            memory: "500Mi"
            cpu: "500m"
        ports:
        - name: mongo-port
          containerPort: 27017

